[
    {
        "id": "651af9bb9a46e4b0",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a72f64871256d68a",
        "type": "http in",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "url": "/",
        "method": "get",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "9e7745c31875caa6"
            ]
        ]
    },
    {
        "id": "2ae9555726c58d4a",
        "type": "template",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"tr\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>ToDo</title>\n\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.min.css\">\n</head>\n\n<body>\n    <div class=\"container mt-5\">\n        <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n                {{#error}}\n                <div class=\"alert alert-danger\">\n                    <h4>{{message}}</h4>\n                </div>\n                {{/error}}\n                <form action=\"/add\" method=\"POST\">\n                    <div class=\"input-group input-group-lg\">\n                        <input  type=\"text\" name=\"name\" class=\"form-control {{#error}}border-danger{{/error}}\"  placeholder=\"Yapılacaklar\">\n                        <button class=\"btn btn-outline-secondary\" type=\"reset\">Temizle</button>\n                        <button class=\"btn btn-outline-primary px-5\" type=\"submit\">Ekle</button>\n                    </div>\n                </form>\n                <div class=\"card mt-2 overflow-hidden\">\n                    <div class=\"card-body p-0\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover m-0\">\n                                <thead class=\"table-dark\">\n                                    <tr>\n                                        <th colspan=\"2\">İş</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {{#payload}}\n                                    <tr>\n                                        <td>{{name}}</td>\n                                        <td align=\"right\">\n                                            <div class=\"btn-group\">\n                                                <form method=\"POST\">\n                                                    <input type=\"hidden\" name=\"id\" value=\"{{id}}\"/>\n                                                {{#done}}\n                                                    <button type=\"submit\" class=\"btn btn-warning\">Aç</button>\n                                                {{/done}}\n                                                {{^done}}\n                                                    <button type=\"submit\" class=\"btn btn-secondary\">Hatırlatıcı</button>\n                                                    <button type=\"submit\" class=\"btn btn-info\">Düzenle</button>\n                                                    <button type=\"submit\" class=\"btn btn-success\">Tamamla</button>\n                                                {{/done}}\n                                                    <button type=\"submit\" formaction=\"/trash\" class=\"btn btn-danger\">Sil</button>\n                                                </form>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    {{/payload}}\n                                    {{^payload}}\n                                    <tr>\n                                        <td colspan=\"2\" class=\"text-mute text-center\">Henüz giriş yapılmadı...</td>\n                                    </tr>\n                                    {{/payload}}\n                                </tbody>\n                            </table>\n\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n        </div>\n    </div>\n    <script src=\"/js/bootstrap.bundle.min.js\"></script>\n</body>\n\n</html>",
        "output": "str",
        "x": 580,
        "y": 220,
        "wires": [
            [
                "5f3b77fa64a6ca14"
            ]
        ]
    },
    {
        "id": "5f3b77fa64a6ca14",
        "type": "http response",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 750,
        "y": 220,
        "wires": []
    },
    {
        "id": "25b78ffc1849119c",
        "type": "function",
        "z": "651af9bb9a46e4b0",
        "name": "DB",
        "func": "// Flush DB\nglobal.set (\"DB\", {\n    todo: []\n})",
        "outputs": 0,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nconst DB = global.get(\"DB\") || {\n    todo: []\n}\n\n/*\ntodo db şeması\n    id: NOW\n    name: \"\"\n    done: true|false\n    stamp: {\n    createdAt: NOW,\n    ip: IP,\n    user: \"\",\n    email: \"\"\n    }\n*/\n\nglobal.set(\"DB\", DB)",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": []
    },
    {
        "id": "8a9c6c7f989384ed",
        "type": "inject",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 100,
        "wires": [
            [
                "25b78ffc1849119c"
            ]
        ]
    },
    {
        "id": "9e7745c31875caa6",
        "type": "function",
        "z": "651af9bb9a46e4b0",
        "name": "db.todo.find()",
        "func": "const DB =global.get(\"DB\")\n\nmsg.payload = DB.todo\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "2ae9555726c58d4a"
            ]
        ]
    },
    {
        "id": "3acd05bfc3de83cf",
        "type": "http in",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "url": "/add",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "a9f75817bd2bb25b",
                "080271436b4ed8b0"
            ]
        ]
    },
    {
        "id": "e49f5a0c756f862c",
        "type": "http response",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 760,
        "y": 340,
        "wires": []
    },
    {
        "id": "9d1fec7958b47e07",
        "type": "function",
        "z": "651af9bb9a46e4b0",
        "name": "db.todo.insert()",
        "func": "const DB =global.get(\"DB\")\n\nlet todo = DB.todo\n\nconst now = new Date().getTime()\ntodo.push({\n    id: new Date().getTime(),\n    name: msg.payload.name,\n    done: false,\n    stamp: {\n        createdAt: now,\n        ip: msg.req.ip,\n        user: \"\",\n        email: \"\"\n    }\n\n})\n\nDB.todo = todo\n\nglobal.set(\"DB\", DB)\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 340,
        "wires": [
            [
                "e49f5a0c756f862c"
            ]
        ]
    },
    {
        "id": "a9f75817bd2bb25b",
        "type": "debug",
        "z": "651af9bb9a46e4b0",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 300,
        "wires": []
    },
    {
        "id": "080271436b4ed8b0",
        "type": "function",
        "z": "651af9bb9a46e4b0",
        "name": "validation",
        "func": "if (!msg.payload.name){\n    node.error(\"İş bilgisi boş bırakılamaz\", msg);\n    return\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 340,
        "wires": [
            [
                "9d1fec7958b47e07"
            ]
        ]
    },
    {
        "id": "fba0212c2dddc740",
        "type": "catch",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "scope": [
            "080271436b4ed8b0"
        ],
        "uncaught": false,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "05a2d9bee8325918",
                "48176e0155aa453c"
            ]
        ]
    },
    {
        "id": "48176e0155aa453c",
        "type": "debug",
        "z": "651af9bb9a46e4b0",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 400,
        "wires": []
    },
    {
        "id": "c5f4d0120c89df7e",
        "type": "link in",
        "z": "651af9bb9a46e4b0",
        "name": "link in 1",
        "links": [
            "05a2d9bee8325918",
            "6c72c808fb7107c1",
            "480e811e105be7ff"
        ],
        "x": 205,
        "y": 180,
        "wires": [
            [
                "9e7745c31875caa6",
                "0277a7fdd0e926b3"
            ]
        ]
    },
    {
        "id": "05a2d9bee8325918",
        "type": "link out",
        "z": "651af9bb9a46e4b0",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "c5f4d0120c89df7e"
        ],
        "x": 445,
        "y": 380,
        "wires": []
    },
    {
        "id": "0505b18118384030",
        "type": "http in",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "url": "/trash",
        "method": "post",
        "upload": false,
        "skipBodyParsing": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "51f34cfc41f1cab9",
                "f33b057f0f3a51c9"
            ]
        ]
    },
    {
        "id": "ae4bed52965f1ebe",
        "type": "http response",
        "z": "651af9bb9a46e4b0",
        "name": "",
        "statusCode": "302",
        "headers": {
            "location": "/"
        },
        "x": 740,
        "y": 460,
        "wires": []
    },
    {
        "id": "034b20cb83d7af67",
        "type": "function",
        "z": "651af9bb9a46e4b0",
        "name": "db.todo.delete()",
        "func": "const DB =global.get(\"DB\")\n\nlet todo = DB.todo\n\nconst index = todo.findIndex(x => x.id == msg.payload.id)\n\nif(!~index){\n    msg.error = {\n    message: \"id ile eşleşen bir kayıt bulunamadı\"\n    }\n    return[null,msg]\n}\n\ntodo.splice(index,1)\n\n\nDB.todo = todo\n\nglobal.set(\"DB\", DB)\n\nreturn msg",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 460,
        "wires": [
            [
                "ae4bed52965f1ebe"
            ],
            [
                "480e811e105be7ff",
                "3b68ad3c2c5de1ae"
            ]
        ],
        "outputLabels": [
            "Success",
            "Error"
        ]
    },
    {
        "id": "51f34cfc41f1cab9",
        "type": "debug",
        "z": "651af9bb9a46e4b0",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 460,
        "wires": []
    },
    {
        "id": "f33b057f0f3a51c9",
        "type": "function",
        "z": "651af9bb9a46e4b0",
        "name": "validation",
        "func": "if (!msg.payload.id){\n    msg.error = {\n        message: \"Silinecek kişinin id bilgisi olmalı\"\n    }\n    return[null,msg]\n}\n\nreturn msg;",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 500,
        "wires": [
            [
                "034b20cb83d7af67"
            ],
            [
                "6c72c808fb7107c1",
                "86d8f8cf0ffe5766"
            ]
        ],
        "outputLabels": [
            "Valid",
            "Invalid"
        ]
    },
    {
        "id": "6c72c808fb7107c1",
        "type": "link out",
        "z": "651af9bb9a46e4b0",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "c5f4d0120c89df7e"
        ],
        "x": 495,
        "y": 500,
        "wires": []
    },
    {
        "id": "480e811e105be7ff",
        "type": "link out",
        "z": "651af9bb9a46e4b0",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "c5f4d0120c89df7e"
        ],
        "x": 705,
        "y": 500,
        "wires": []
    },
    {
        "id": "86d8f8cf0ffe5766",
        "type": "debug",
        "z": "651af9bb9a46e4b0",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 540,
        "wires": []
    },
    {
        "id": "3b68ad3c2c5de1ae",
        "type": "debug",
        "z": "651af9bb9a46e4b0",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 540,
        "wires": []
    },
    {
        "id": "0277a7fdd0e926b3",
        "type": "debug",
        "z": "651af9bb9a46e4b0",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 180,
        "wires": []
    }
]